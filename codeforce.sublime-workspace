{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inc",
				"inc_char"
			],
			[
				"re",
				"size_req"
			],
			[
				"it",
				"it1"
			],
			[
				"in",
				"inc_char"
			],
			[
				"an",
				"ans_b"
			],
			[
				"ans_",
				"ans_a"
			],
			[
				"ma",
				"max_sum_k_b_temp"
			],
			[
				"ans",
				"ans_a"
			],
			[
				"max",
				"max_sum_k_b"
			],
			[
				"a",
				"ans"
			],
			[
				"s",
				"sum"
			],
			[
				"ro",
				"row_first_index"
			],
			[
				"str",
				"start"
			],
			[
				"co",
				"count"
			],
			[
				"pri",
				"printed"
			],
			[
				"st",
				"start"
			],
			[
				"c",
				"count_prime_div"
			],
			[
				"cou",
				"count_prime_div"
			],
			[
				"fr",
				"freq"
			],
			[
				"min",
				"min_b"
			],
			[
				"m",
				"max_l"
			],
			[
				"nu",
				"num_odd"
			],
			[
				"num",
				"num_odd"
			],
			[
				"pre",
				"prev_odd"
			],
			[
				"rem",
				"rem_od"
			],
			[
				"sum",
				"sum_even"
			],
			[
				"su",
				"sum_even"
			],
			[
				"le",
				"len"
			],
			[
				"req",
				"req_b"
			],
			[
				"req_",
				"req_s"
			],
			[
				"sh",
				"shop_s"
			],
			[
				"sho",
				"shop_b"
			],
			[
				"en",
				"endl"
			],
			[
				"end",
				"end_ver"
			],
			[
				"tem",
				"temp-1"
			],
			[
				"temp",
				"temp-1"
			],
			[
				"te",
				"temp-1"
			],
			[
				"tme",
				"temp_max"
			],
			[
				"A",
				"arr"
			],
			[
				"b",
				"b_rec"
			],
			[
				"prev",
				"prev_zero"
			],
			[
				"pu",
				"push"
			],
			[
				"n",
				"node"
			],
			[
				"od",
				"ood_req"
			],
			[
				"push",
				"push_back"
			],
			[
				"v",
				"v_1"
			],
			[
				"all",
				"all_sort_path_1"
			],
			[
				"v_",
				"v_2"
			],
			[
				"al",
				"all_sort_path_2"
			],
			[
				"sor",
				"sort_path"
			],
			[
				"vi",
				"visited_2"
			],
			[
				"visited_",
				"visited_1"
			],
			[
				"so",
				"sort_path_2"
			],
			[
				"sp",
				"sort_path_1"
			],
			[
				"length_",
				"length_1"
			],
			[
				"pa",
				"path"
			],
			[
				"p",
				"push_back"
			],
			[
				"is",
				"isComposite"
			],
			[
				"bob",
				"bob_sum"
			],
			[
				"ali",
				"alice_sum"
			],
			[
				"bo",
				"bob_sum"
			],
			[
				"be",
				"below"
			],
			[
				"us",
				"used_card"
			],
			[
				"do",
				"done"
			],
			[
				"pr",
				"prev_num"
			],
			[
				"f",
				"first"
			],
			[
				"e",
				"endl"
			],
			[
				"beg",
				"begin"
			],
			[
				"ad",
				"add"
			],
			[
				"si",
				"size"
			],
			[
				"ar",
				"arr"
			],
			[
				"siz",
				"size_t"
			],
			[
				"ca",
				"capacity"
			],
			[
				"m_",
				"m_size"
			],
			[
				"size",
				"size_t"
			],
			[
				"sta",
				"start_Y"
			],
			[
				"n-",
				"n-start"
			],
			[
				"End",
				"endl"
			],
			[
				"d",
				"done"
			],
			[
				"s1",
				"s1_it"
			],
			[
				"s2",
				"s2_it"
			]
		]
	},
	"buffers":
	[
		{
			"file": "max_abs.cpp",
			"settings":
			{
				"buffer_size": 636,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <bits\\stdc++.h>\n \nusing namespace std;\n \nconst int M = 1e5+10;\nint a[M] , dp[M];\n \nint main()\n{\n\tint n , max = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n ; i++)\n\t\tcin >> a[i];\n\tfor (int i = 0 ; i < M ; i++)\n\t\tdp[i] = M;\n\tfor (int i = 0 ; i < n ; i++){\n\t\tdp[lower_bound(dp , dp+M , a[i]) - dp] = a[i];\n\t}\n\tfor (int i = 0 ; i <= n ; i++){\n\t\tif (dp[i] == M)\n\t\t{\n\t\t\tmax = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << max << endl;\n}",
			"file": "bubble_sort.cpp",
			"file_size": 418,
			"file_write_time": 132368710372781375,
			"settings":
			{
				"buffer_size": 414,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n,p;cin>>n>>p;\n\tstring s;cin>>s;\n\tint un_eq = 0;\n\t\n\tfor(int i=0;i<n;i++){\n\n\t}\t\n}",
			"file": "palindrom_trans.cpp",
			"file_size": 143,
			"file_write_time": 132370171273663947,
			"settings":
			{
				"buffer_size": 143,
				"line_ending": "Unix"
			}
		},
		{
			"file": "short_substring.cpp",
			"settings":
			{
				"buffer_size": 236,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "#include<bits/stdc++.h>"
			}
		},
		{
			"file": "even_array.cpp",
			"settings":
			{
				"buffer_size": 427,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "social_dist_table.cpp",
			"settings":
			{
				"buffer_size": 504,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "task_on_board.cpp",
			"settings":
			{
				"buffer_size": 999,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "neck_Ass.cpp",
			"settings":
			{
				"buffer_size": 677,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"paka",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Advanced Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"#include<iostream.h>",
			"cout<<endl;",
			"lr;,",
			"git add"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ritik-garg/com_prog/codeforce",
		"/home/ritik-garg/com_prog/codeforce/mokevita"
	],
	"file_history":
	[
		"/home/ritik-garg/com_prog/codeforce/mokevita/philaland.cpp",
		"/opt/lampp/htdocs/index.php",
		"/home/ritik-garg/xamp_data/db.php",
		"/home/ritik-garg/com_prog/codeforce/mafia.cpp",
		"/home/ritik-garg/com_prog/codeforce/num_ways.cpp",
		"/home/ritik-garg/com_prog/codeforce/gargari_bishop.cpp",
		"/home/ritik-garg/com_prog/codeforce/restore_graph.cpp",
		"/home/ritik-garg/com_prog/codeforce/bear_p_num.cpp",
		"/home/ritik-garg/com_prog/codeforce/vasya_basket.cpp",
		"/home/ritik-garg/com_prog/codeforce/social_dist.cpp",
		"/home/ritik-garg/com_prog/codeforce/painting_fence.cpp",
		"/home/ritik-garg/com_prog/codeforce/part_array.cpp",
		"/home/ritik-garg/com_prog/codeforce/xxxx.cpp",
		"/home/ritik-garg/com_prog/codeforce/count_tri.cpp",
		"/home/ritik-garg/com_prog/codeforce/seq_digit.cpp",
		"/home/ritik-garg/com_prog/codeforce/good_string.cpp",
		"/home/ritik-garg/com_prog/codeforce/valid_Set.cpp",
		"/home/ritik-garg/com_prog/codeforce/color_grapgh.cpp",
		"/home/ritik-garg/com_prog/codeforce/hamburger.cpp",
		"/home/ritik-garg/com_prog/codeforce/young_exp.cpp",
		"/home/ritik-garg/com_prog/codeforce/vasya_chess.cpp",
		"/home/ritik-garg/com_prog/codeforce/min_euler_circle.cpp",
		"/home/ritik-garg/com_prog/codeforce/te_another.cpp",
		"/home/ritik-garg/com_prog/codeforce/mixing_water.cpp",
		"/home/ritik-garg/com_prog/codeforce/new_threat.cpp",
		"/home/ritik-garg/com_prog/codeforce/berland_poker.cpp",
		"/home/ritik-garg/com_prog/codeforce/temp.cpp",
		"/home/ritik-garg/com_prog/codeforce/rotating_mach.cpp",
		"/home/ritik-garg/com_prog/codeforce/trouble_sort.cpp",
		"/home/ritik-garg/com_prog/codeforce/game_leave.cpp",
		"/home/ritik-garg/com_prog/codeforce/matrix_game.cpp",
		"/home/ritik-garg/com_prog/codeforce/multiset.cpp",
		"/home/ritik-garg/com_prog/codeforce/john_cont.cpp",
		"/home/ritik-garg/com_prog/codeforce/john_hob.cpp",
		"/home/ritik-garg/com_prog/codeforce/beu_num.cpp",
		"/home/ritik-garg/com_prog/codeforce/subseq_hate.cpp",
		"/home/ritik-garg/com_prog/codeforce/odd_sum.cpp",
		"/home/ritik-garg/com_prog/codeforce/color_rev.cpp",
		"/color_rev.cpp",
		"/home/ritik-garg/com_prog/codeforce/valid_bfs.cpp",
		"/home/ritik-garg/com_prog/codeforce/wt_dist.cpp",
		"/home/ritik-garg/com_prog/codeforce/celex_up.cpp",
		"/home/ritik-garg/com_prog/codeforce/honest_coach.cpp",
		"/home/ritik-garg/com_prog/codeforce/best_vac.cpp",
		"/home/ritik-garg/com_prog/codeforce/maria_iso.cpp",
		"/home/ritik-garg/com_prog/codeforce/light_park.cpp",
		"/home/ritik-garg/com_prog/codeforce/and_color_ballon.cpp",
		"/home/ritik-garg/com_prog/codeforce/but_shov.cpp",
		"/home/ritik-garg/com_prog/codeforce/spy_string.cpp",
		"/home/ritik-garg/com_prog/codeforce/polygon.cpp",
		"/home/ritik-garg/com_prog/codeforce/sim_pair.cpp",
		"/home/ritik-garg/com_prog/codeforce/min_suare.cpp",
		"/home/ritik-garg/Downloads/readme.txt",
		"/home/ritik-garg/com_prog/codeforce/special_ele.cpp",
		"/home/ritik-garg/com_prog/codeforce/fbc/ion_flux.py",
		"/home/ritik-garg/com_prog/codeforce/k_not_div.cpp",
		"/home/ritik-garg/com_prog/codeforce/same_parity_sum.cpp",
		"/home/ritik-garg/com_prog/codeforce/alice_candy.cpp",
		"/home/ritik-garg/com_prog/codeforce/round_num.cpp",
		"/home/ritik-garg/com_prog/codeforce/no_palindrone.cpp",
		"/home/ritik-garg/com_prog/codeforce/number.cpp",
		"/home/ritik-garg/com_prog/codeforce/card_const.cpp",
		"/home/ritik-garg/com_prog/codeforce/puzzle_piece.cpp",
		"/home/ritik-garg/com_prog/codeforce/perm_rank.cpp",
		"/home/ritik-garg/com_prog/codeforce/b.py",
		"/home/ritik-garg/com_prog/codeforce/phonex_beauty.cpp",
		"/home/ritik-garg/com_prog/codeforce/ph_dist.cpp",
		"/home/ritik-garg/com_prog/codeforce/phonex_memory.cpp",
		"/home/ritik-garg/com_prog/codeforce/hlb_hotel.cpp",
		"/home/ritik-garg/com_prog/codeforce/dont_get _volunter.py",
		"/home/ritik-garg/com_prog/ds/template.cpp",
		"/home/ritik-garg/com_prog/ds/array/implement_using_stl.cpp",
		"/home/ritik-garg/com_prog/dsalgo/ds/array/static_dynamic_array.cpp",
		"/home/ritik-garg/com_prog/dsalgo/ds/array/implement_using_stl.cpp",
		"/tmp/mozilla_ritik-garg0/parthtiwari-000000000031d6bb.txt",
		"/tmp/mozilla_ritik-garg0/Abhi333jain-000000000032709f.txt",
		"/tmp/mozilla_ritik-garg0/parthtiwari-000000000031d6bb-1.txt",
		"/home/ritik-garg/com_prog/codeforce/code_jam_1c/2.cpp",
		"/home/ritik-garg/com_prog/codeforce/1.cpp",
		"/home/ritik-garg/com_prog/codeforce/d_per.cpp",
		"/home/ritik-garg/com_prog/codeforce/ph_beauty.cpp",
		"/home/ritik-garg/com_prog/codeforce/pho_bal.cpp",
		"/home/ritik-garg/com_prog/codeforce/ano_c_prob.cpp",
		"/home/ritik-garg/com_prog/codeforce/d_color.cpp",
		"/home/ritik-garg/com_prog/codeforce/d_rank_col.cpp",
		"/home/ritik-garg/com_prog/codeforce/badge.cpp",
		"/home/ritik-garg/com_prog/codeforce/polandball_hyp.cpp",
		"/home/ritik-garg/com_prog/codeforce/output.txt",
		"/home/ritik-garg/codeforce/output.txt",
		"/home/ritik-garg/codeforce/a.out",
		"/home/ritik-garg/codeforce/ouput.txt"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"}\n",
			"it",
			"\t\t\n",
			"\t\n",
			"path",
			"endl",
			"\t\t\t\n",
			";\n",
			"a.",
			"isValidCoord",
			"Node",
			"sho_me_da_wei",
			"ChessBoard",
			"61",
			"51",
			"4",
			"34",
			") "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"queue.",
			"is_valid",
			"position",
			"bfs",
			"board",
			"51",
			"61",
			"34",
			"4",
			"19"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "max_abs.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 636,
						"regions":
						{
						},
						"selection":
						[
							[
								462,
								462
							],
							[
								636,
								636
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bubble_sort.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 414,
						"regions":
						{
						},
						"selection":
						[
							[
								253,
								253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "palindrom_trans.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 143,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "short_substring.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 236,
						"regions":
						{
						},
						"selection":
						[
							[
								145,
								145
							]
						],
						"settings":
						{
							"auto_name": "#include<bits/stdc++.h>",
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "even_array.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 427,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "social_dist_table.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 504,
						"regions":
						{
						},
						"selection":
						[
							[
								470,
								470
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "task_on_board.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 999,
						"regions":
						{
						},
						"selection":
						[
							[
								636,
								636
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 71.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "neck_Ass.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 677,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 202.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 108.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "codeforce.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 105.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
